<!DOCTYPE html>
<html>
	<head>
		<title>Responsive Design</title>
		<meta name="robots" content="noindex" />
		<style>
			.docs-responsive-demo {
				background-color: rgb(255, 255, 255) !important;
			}
		</style>
	</head>
	<body>
		<article class="doc-responsive">
			<h1>Responsive Design</h1>
			<section class="desc">
				<p>
					Here&apos;s the list of classnames that can be used to toggle display based on breakpoint;
					they work on all elements.
				</p>
			</section>
			<section id="breakpoints">
				<dl>
					<dt>show in breakpoint <em>only</em></dt>
					<dd><code>.ts-show-mobile-only</code></dd>
					<dd><code>.ts-show-tablet-only</code></dd>
					<dd><code>.ts-show-desktop-only</code></dd>
				</dl>
				<dl>
					<dt>hide in breakpoint <em>only</em></dt>
					<dd><code>.ts-hide-mobile-only</code></dd>
					<dd><code>.ts-hide-tablet-only</code></dd>
					<dd><code>.ts-hide-desktop-only</code></dd>
				</dl>
				<dl>
					<dt>show in breakpoint <em>and up</em></dt>
					<dd><code>.ts-show-mobile</code></dd>
					<dd><code>.ts-show-tablet</code></dd>
					<dd><code>.ts-show-desktop</code></dd>
				</dl>
				<dl>
					<dt>hide in breakpoint <em>and up</em></dt>
					<dd><code>.ts-hide-mobile</code></dd>
					<dd><code>.ts-hide-tablet</code></dd>
					<dd><code>.ts-hide-desktop</code></dd>
				</dl>
			</section>
			<section>
				<p>Try resizing the page and see which of the boxes below are shown.</p>
			</section>
			<section id="doc-break-demo" data-ts="Spirit">
				<script type="text/edbml">
					var clazzNames = [
						'ts-show-mobile-only',
						'ts-show-tablet-only',
						'ts-show-desktop-only',
						'ts-hide-mobile-only',
						'ts-hide-tablet-only',
						'ts-hide-desktop-only',
						'ts-show-desktop',
						'ts-show-tablet',
						'ts-show-mobile',
						'ts-hide-desktop',
						'ts-hide-tablet',
						'ts-hide-mobile'
					];
					clazzNames.forEach(function(clazz) {
						<div class="docs-responsive-demo ${clazz}">
							<code>.${clazz}</code>
						</div>
					});
				</script>
			</section>
			<section>
				<h3>Find the current breakpoint</h3>
				<p>
					The current breakpoint is determined via CSS classnames on the
					<code>html</code> element. You can use a function such as this to lookup the current
					breakpoint (CSS classname).
				</p>
				<figure data-ts="DoxScript">
					<script>
						function breakpoint() {
							return ['ts-mobile-only', 'ts-tablet-only', 'ts-desktop-only'].find(c =>
								document.documentElement.classList.contains(c)
							);
						}
					</script>
				</figure>
			</section>
			<section>
				<h3>Observing the breakpoint</h3>
				<p>
					You can setup an event listener for <code>ts-breakpoint</code> to get notified whenever
					the breakpoint changes. Again, the current breakpoint is determined via CSS classes.
				</p>
				<figure data-ts="DoxScript">
					<script>
						document.addEventListener('ts-breakpoint', function() {
							console.log(breakpoint()); // see above
						});
					</script>
				</figure>
			</section>
		</article>
	</body>
</html>
