<!DOCTYPE html>
<html>
	<head>
		<title>Buttons</title>
		<object data="tabs.xhtml"></object>
		<style>
			.ts-button span code {
				text-transform: none;
				letter-spacing: auto;
			}
		</style>
	</head>
	<body>
		<article>
			<h1>Buttons</h1>
			<section class="desc">
				<p>Group buttons in menus to unlock advanced layout options.</p>
			</section>
			<section>
				<p>
					Assign <att>data-ts="Buttons"</att> attribute to a <elm>menu</elm> to initialize it as a
					Buttons menu.
				</p>
				<figure data-ts="DoxMarkup">
					<output />
					<script type="text/html">
						<menu data-ts="Buttons">
							<li>
								<button>
									<span>Button One</span>
								</button>
							</li>
							<li>
								<button>
									<span>Button Two</span>
								</button>
							</li>
						</menu>
					</script>
				</figure>
				<p>
					When in menus, buttons stack vertically and stretch to fill the width. You can omit the
					<code class="attr-name">ts-button</code> attribute on buttons, it is implied. You can also
					omit the <code class="attr-value">ts-tertiary</code> classname on the buttons, it is
					assumed by default.
				</p>

				<h3>Button layouts</h3>
				<p>The <elm>menu</elm> can be assigned a classname to layout the buttons horizontally.</p>
				<figure data-ts="DoxMarkup">
					<output />
					<script type="text/html">
						<menu data-ts="Buttons" class="ts-t-t ts-join">
							<li>
								<button class="ts-primary">
									<span>Accept</span>
								</button>
							</li>
							<li>
								<button class="ts-danger">
									<span>Reject</span>
								</button>
							</li>
						</menu>
					</script>
				</figure>
				<p>
					The classname <val>ts-t-t</val> indicates that two buttons should both display text
					instead of icons. If you add both, the layout will take care of hiding one or the other. A
					special classname <val>ts-join</val> has been added to join the buttons together. We
					support the following permutations.
				</p>
				<div data-ts="Note">
					<i class="ts-icon-warning"></i>
					<p>
						This implementation is likely to be <code>refactored</code> for more flexibility, so the
						following list of classnames may become deprecated in the future.
					</p>
				</div>
			</section>
			<section data-ts="Spirit">
				<script type="text/edbml">
					[
						'ts-t-t',
						'ts-i-t',
						'ts-t-i',
						'ts-i-i-t',
						'ts-i-t-i',
						'ts-t-i-i'
					].map(function(c) {
						rendermenu(c);
						return c;
					}).forEach(function(c) {
						rendermenu(c, 'ts-join');
					});

					function rendermenu(c1, c2) {
						var cname = c1 + ' ' + (c2 || '');
						<menu data-ts="Buttons" class="${cname}">
							c1.substring('ts-'.length).split('-').forEach(function() {
								<li>
									<button>
										<span><code>${cname}</code></span>
										<i class="ts-icon-followed"></i>
									</button>
								</li>
							})
						</menu>
					}
				</script>
			</section>
			<section>
				<div data-ts="Note">
					<i class="ts-icon-info"></i>
					<p>
						The classname shown on buttons should in all cases go on the
						<elm>menu</elm> element (and not on the <elm>button</elm> elements).
					</p>
				</div>
			</section>
		</article>
	</body>
</html>
