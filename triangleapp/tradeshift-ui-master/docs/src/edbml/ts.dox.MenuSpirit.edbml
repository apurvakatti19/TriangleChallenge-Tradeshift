<!DOCTYPE edbml>
<script>
	<?input name="menu" type="ts.dox.MenuModel"?>

	if(menu.searchresults) {
		renderResults(menu.searchquery, menu.searchresults);
	} else {
		renderItems(menu.items);
	}
	
	// Menu mode .................................................................
	
	function renderItems(items) {
		items.filter(function(item) {
			return !item.hidden;
		}).forEach(renderItem);
	}
	
	function renderItem(item) {
		@id = 'item-' + item.$instanceid;
		if(item.items) {
			<li @id class="submenu" data-ts="DoxSubMenu" data-ts.open="${item.open}">
				renderLink(item);
				<div class="ts-shadow"></div>
				<menu class="ts-menu">
					renderItems(item.items);
				</menu>
			</li>
		} else if(item.path) {
			<li @id data-ts="DoxItem">
				renderLink(item);
			</li>
		} else if(item.label){
			<h3 id="${itemid}">
				<div class="ts-shadow"></div>
				<span>${item.label}</span>
			</h3>
		}
	}
	
	function renderLink(item) {
		@href = '#' + item.path;
		@id = 'link-' + item.$instanceid;
		@class = item.selected ? 'ts-checked' : null;
		<a @id @class @href tabindex="-1">
			<i data-ts="Icon" src="#${item.icon}"></i>
			<span>${item.label}</span>
		</a>
	}


	// Search mode ...............................................................

	function renderResults(query, results) {
		var length = results.length;
		<li class="resultsbanner">
			if(length) {
				<span>"${query}" found in <strong>${length}</strong> pagesâ€¦</span>
				<span class="ts-shadow"></span>
			} else {
				<span>Sorry, no results for "${query}"</span>
			}
		</li>
		if(length) {
			results.forEach(renderResult);
		}
	}

	function renderResult(result) {
		<li>
			@id = 'link-' + result.$instanceid;
			@class = result.selected ? 'ts-checked' : null;
			<a @id @class data-ts="Button" href="${prefix()}#${result.href}">
				<i data-ts="Icon" class="ts-icon-romance-find-love"></i>
				<span>${result.title}</span>
			</a>
		</li>
	}

	// append `v11` to href when on docs website (on the internet)...
	function prefix() {
		var regx = /^\/v\d+\/+/;
		var path = location.pathname;
		var list = regx.exec(path);
		return list ? list[0] : '/';
	}
	
</script>
